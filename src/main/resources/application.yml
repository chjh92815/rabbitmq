# Tomcat
server:
  tomcat:
    uri-encoding: UTF-8
    max-threads: 1000
    min-spare-threads: 30
  port: 8082
  connection-timeout: 5000ms
  servlet:
    context-path: /

spring:
  datasource:
    druid:
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://localhost:3306/dev-cva-admin?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&useSSL=true
      username: test
      password: 123456
      initial-size: 10
      max-active: 100
      min-idle: 10
      max-wait: 60000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        #login-username: admin
        #login-password: admin
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true

  #rabbitmq config
  #spring.rabbitmq.addresses=单机，集群多个地址以,号隔开
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /
  #开启rabbitmq的confirm机制,如果消息没有到达exchange,或者exchange在ack生产者的时候，生产者没有收到,那么生产者会进行重发
  #如果设置为false,经过测试，不会进行回调

    publisher-confirms: true

  #消息发送至queue 失败才callback
    publisher-returns: true

  #开启rabbitmq的生产端{template}重试机制,默认是false,默认重试3次
    template:
      retry:
        enabled: true
  #关闭消息的强制路由，当生产者将消息发到exchange，如果没有queue进行绑定, 禁止broker发送basic.return，表示当前消息无人消费
  #因为我们配置了消息的持久性，就算没有消费者，消息也在磁盘，默认就是false
      mandatory: false
  #开启rabbitmq的消费者{listener}重试机制,该重试机制需要设置为自动ack,本次方案和PHP保持一致，如果消费者消费失败后，手动将消息放入死信队列等待消息被重新消费
  # 默认该配置为false,设置为true的意思是，如果消费者消费失败了，rabbitmq server会自动重试3次
  #spring.rabbitmq.listener.simple.retry.enabled=true
  #消费端采用手动应答
    listener:
      simple:
        acknowledge-mode: manual
  #默认缓存模式是channel,在springboot里面,比如在框架rabbitmqTemplate中使用的通道将会可靠地返回到缓存中
  #spring.rabbitmq.cache.connection.mode=channel
  #设置默认通道缓存的大小
  #spring.rabbitmq.cache.channel.size=10
  #配置生产者的配置，包括exchange,routingkey等
  #java.rabbitmq.send.service.exchange=scm3.materials
  #java.rabbitmq.send.service.rountkey=direct_rounting_key
  #配置supply监听信息
  #java.rabbitmq.consumer.service.retry.exchange=scm3.materials.retry
  #java.rabbitmq.consumer.service.fail.exchange=scm3.materials.fail
  #java.rabbitmq.consumer.service.supply.retry.routingkey=material@supply
  #配置user监听信息
  #java.rabbitmq.consumer.service.user.retry.routingkey=material@user

#mybatis
mybatis-plus:
  mapper-locations: classpath:/mapper/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.example.rabbitmq.entity
  global-config:
    #数据库相关配置
    db-config:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID", ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: ID_WORKER
      #字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      field-strategy: NOT_NULL
      #驼峰下划线转换
      column-underline: true
      #db-type: mysql
    banner: false
  #原生配置
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'
